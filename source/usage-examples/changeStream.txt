=================
Watch for Changes
=================

.. default-domain:: mongodb

You can watch for changes in MongoDB by using the `watch()
<https://mongodb.github.io/node-mongodb-native/3.5/api/Collection.html#watch>`_ method. ``watch()`` opens a :manual:`Change Stream</changeStreams/>`, that allows applications to watch for changes to data and react to those changes. After opening a ``Change Stream`` you can process the change events using the `changeStream.next()
<http://mongodb.github.io/node-mongodb-native/3.5/api/ChangeStream.html#next>`_ method. ``watch()`` takes an optional ``pipeline`` paramater that is an array of :manual:`stages </reference/operator/aggregation-pipeline/#stages>` to filter the change events output. 


Create an `Object
<https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object>`_
to specify additional options. Set the ``fullDocument`` option to the
string ``updateLookup`` to include the changes to the document as well as
the entire altered document.

The command() method returns a Promise that resolves to an object containing the return object of the operation that was run.

The ``watch()`` command returns a ``change stream`` instance. Change events are processed with the ``changeStream.next()`` method that returns a promise that resolves to an object. The ``documentKey`` field of this object is an object that contains the ``_id`` of the changed documented.

. literalinclude:: /code-snippets/usage-examples/changeStream.js
  :language: javascript
  :linenos:
