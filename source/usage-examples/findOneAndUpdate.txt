==========================
Find and Update a Document
==========================

.. default-domain:: mongodb

A single document can be updated and returned in an atomic
operation using the `findOneAndUpdate()
<https://mongodb.github.io/node-mongodb-native/3.3/api/Collection.html#findOneAndUpdate>`_
method.  ``findOneAndUpdate()`` takes a filter object, updating the
first document that it matches.

Create an object to specify additional options. Specify the
fields to return by providing specific fields to retrieve via the
``projection`` key. Specify whether the filter should be ascending or
descending to update a document based on a particular order by using the
``sort`` key. The ``upsert`` option creates a new document if no
documents match the filter. Specify to return the updated document by
setting ``returnNewDocument`` to true. 

The ``findOneAndUpdate()`` method returns a
`Promise <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise>`_
that resolves to an
`Object <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object>`_,
containing the original document, or the updated document if ``returnNewDocument:true``
is specified in the Options object, and info about the success of the
operation and the ``operationTime``.

Specifying incorrect parameters for your ``findOneAndUpdate()`` operation can
cause errors to be thrown. One common error is the attempt to update an
immutable field, causing the error message: "Performing an update on the
path '_id' would modify the immutable field '_id'". Also, attempting to
update a field with a unique index would throw the error, "E11000
duplicate key error collection: <dbName>.<collectionName> index:
<indexField> dup key: { : <attempted update value> }"

.. literalinclude:: /code-snippets/usage-examples/findOneAndUpdate.js
  :language: javascript
  :linenos: