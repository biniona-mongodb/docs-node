=================
Update a Document
=================

.. default-domain:: mongodb

You can update a single document using the `updateOne() <https://mongodb.github.io/node-mongodb-native/3.3/api/Collection.html#updateOne>`_ method. 
``updateOne()`` takes a filter for a document, and updates the first document
that matches the filter.

Create an `object
<https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object>`_
to specify additional options. Set the ``upsert`` option to create a new
document if no documents match the filter.

The ``updateOne()`` method returns `Promise
<https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise>`_
that resolves to an object that contains information such as the number
of documents that match the filter, and the number of documents that
were modified.

Specifying incorrect parameters for your ``updateOne()`` operation can
cause errors to be thrown. One common error is the attempt to update an
immutable field, causing the error message: "Performing an update on the
path '_id' would modify the immutable field '_id'". Also, attempting to
update a field with a unique index would throw the error, "E11000
duplicate key error collection: <dbName>.<collectionName> index:
<indexField> dup key: { : <attempted update value> }"


.. literalinclude:: /code-snippets/usage-examples/updateOne.js
  :language: javascript
  :linenos:

.. note::

  If your application requires the document after updating,
  consider using the
  `collection.findOneAndUpdate() <https://mongodb.github.io/node-mongodb-native/3.3/api/Collection.html#findOneAndUpdate>`_.
  method, which has a similar interface to ``updateOne()`` but also
  returns the original or updated document.