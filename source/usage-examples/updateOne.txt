=================
Update a Document
=================

.. default-domain:: mongodb


.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol


You can update a single document using the `updateOne() <https://mongodb.github.io/node-mongodb-native/3.3/api/Collection.html#updateOne>`_ method. 
``updateOne()`` takes a filter for a document, and updates the first document
that matches the filter. An empty filter will update the first document 
in a collection.

Create an Options object to specify additional options.
The ``upsert`` option creates a new document if no documents match the filter. 
The ``w`` option can be used to specify the :manual:`Write Concern 
</reference/write-concern/>` of the operation. 

The ``updateOne()`` method returns a document containing information such
as the number of documents that match the filter, and the number of
documents that were modified.


.. code-block:: javascript

    const { MongoClient } = require('mongodb');

    const client = new MongoClient(
      'mongodb+srv://<user>:<password>@<cluster-url>?retryWrites=true&w=majority',
    );

    async function run() {
      try {
        await client.connect();

        const database = client.db('sample_mflix');
        const collection = database.collection('movies');

        // create a query for a movie to update
        const filter = { title: 'Blacksmith Scene' };
        const options = {};
        options.upsert = true; // create a document if no documents match the filter
        options.w = 1; // request acknowledgment from MongoDB when the update has been performed on the standalone mongod instance

        const result = await collection.updateOne(
          filter,
          {
            $set: {
              plot: 'Blacksmith Scene is a silent film directed by William K.L. Dickson',
            },
          },
          options,
        );
        console.log(
          `${result.matchedCount} document matched the query and ${result.modifiedCount} document was updated`,
        );
      } finally {
        await client.close();
      }
    }
    run().catch(console.dir);